{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "dev-datafactory-2154"
		},
		"sql_server_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'sql_server'",
			"defaultValue": "Integrated Security=False;Data Source=localhost;Initial Catalog=AdventureWorks;User ID=dat"
		},
		"databricks_properties_typeProperties_existingClusterId": {
			"type": "string",
			"defaultValue": "0703-105957-mmt3gzht"
		},
		"linked_services_data_lake_storage_gen2_custom_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://devstorageshin.dfs.core.windows.net/"
		},
		"linked_services_key_vault_custom_properties_typeProperties_baseUrl": {
			"type": "string",
			"defaultValue": "https://dev-key-vault-shin-21.vault.azure.net/"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/full_load')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "LookupSchemaTables",
						"description": "Look up query to fetch all the table names belong to the schema",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": "SELECT TABLE_SCHEMA as schema_name, TABLE_NAME as table_name\nFROM information_schema.tables\nWHERE TABLE_SCHEMA = 'SalesLT';",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "lookUpQueryTables",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "forEachTable",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "LookupSchemaTables",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('LookupSchemaTables').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "CopyEachTable",
									"description": "Copy each table from the lookup activities",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"sqlReaderQuery": {
												"value": "@{concat('SELECT * FROM ',item().schema_name,'.',item().table_name)}",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "EachTableDataset",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "ParquetTable",
											"type": "DatasetReference",
											"parameters": {
												"schema_name": {
													"value": "@item().schema_name",
													"type": "Expression"
												},
												"table_name": {
													"value": "@item().table_name",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/lookUpQueryTables')]",
				"[concat(variables('factoryId'), '/datasets/EachTableDataset')]",
				"[concat(variables('factoryId'), '/datasets/ParquetTable')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/EachTableDataset')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "sql_server",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [],
				"typeProperties": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/sql_server')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Parquet1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "linked_services_data_lake_storage_gen2_custom",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "full-load",
						"fileSystem": "bronze-layer"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/linked_services_data_lake_storage_gen2_custom')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ParquetTable')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "linked_services_data_lake_storage_gen2_custom",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"schema_name": {
						"type": "string"
					},
					"table_name": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@{concat(dataset().table_name,'_',utcNow('yyyyMMdd'),'.parquet')}",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@{concat(dataset().schema_name,'/',dataset().table_name,'/','FullLoad','/',utcNow('yyyy/MM/dd'))}",
							"type": "Expression"
						},
						"fileSystem": "bronze-layer"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/linked_services_data_lake_storage_gen2_custom')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SqlServerTable1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "sql_server",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [
					{
						"name": "AddressID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "AddressLine1",
						"type": "nvarchar"
					},
					{
						"name": "AddressLine2",
						"type": "nvarchar"
					},
					{
						"name": "City",
						"type": "nvarchar"
					},
					{
						"name": "StateProvince",
						"type": "nvarchar"
					},
					{
						"name": "CountryRegion",
						"type": "nvarchar"
					},
					{
						"name": "PostalCode",
						"type": "nvarchar"
					},
					{
						"name": "rowguid",
						"type": "uniqueidentifier"
					},
					{
						"name": "ModifiedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "SalesLT",
					"table": "Address"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/sql_server')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/lookUpQueryTables')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "sql_server",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [],
				"typeProperties": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/sql_server')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/databricks')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "ADB Linked Service via MSI",
				"annotations": [],
				"type": "AzureDatabricks",
				"typeProperties": {
					"domain": "https://adb-4145753376904134.14.azuredatabricks.net",
					"authentication": "MSI",
					"workspaceResourceId": "/subscriptions/55a851c4-b3bf-4b1c-926a-af6cdad646b9/resourceGroups/dev_rg-charming-dinosaur/providers/Microsoft.Databricks/workspaces/dev-databrick-2153",
					"existingClusterId": "[parameters('databricks_properties_typeProperties_existingClusterId')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/linked_services_data_lake_storage_gen2_custom')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('linked_services_data_lake_storage_gen2_custom_properties_typeProperties_url')]",
					"credential": {
						"referenceName": "data_factory_bronze_container_identity",
						"type": "CredentialReference"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/credentials/data_factory_bronze_container_identity')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/linked_services_key_vault_custom')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureKeyVault",
				"typeProperties": {
					"baseUrl": "[parameters('linked_services_key_vault_custom_properties_typeProperties_baseUrl')]",
					"credential": {
						"referenceName": "data_factory_key_vault_identity",
						"type": "CredentialReference"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/credentials/data_factory_key_vault_identity')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/sql_server')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "SqlServer",
				"typeProperties": {
					"connectionString": "[parameters('sql_server_connectionString')]",
					"password": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "linked_services_key_vault_custom",
							"type": "LinkedServiceReference"
						},
						"secretName": "db-password"
					}
				},
				"connectVia": {
					"referenceName": "self-hosted-integration-runtime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/self-hosted-integration-runtime')]",
				"[concat(variables('factoryId'), '/linkedServices/linked_services_key_vault_custom')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/trigger1')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "full_load",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Minute",
						"interval": 5,
						"startTime": "2024-07-07T00:00:00",
						"timeZone": "SE Asia Standard Time"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/full_load')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/self-hosted-integration-runtime')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "SelfHosted",
				"typeProperties": {
					"selfContainedInteractiveAuthoringEnabled": false
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/adf_databrick_identity')]",
			"type": "Microsoft.DataFactory/factories/credentials",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Credential for azure data factory to access databricks workspace",
				"type": "ManagedIdentity",
				"typeProperties": {
					"resourceId": "/subscriptions/55a851c4-b3bf-4b1c-926a-af6cdad646b9/resourceGroups/dev_rg-charming-dinosaur/providers/Microsoft.ManagedIdentity/userAssignedIdentities/adf_databrick_identity"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/data_factory_bronze_container_identity')]",
			"type": "Microsoft.DataFactory/factories/credentials",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Credential for azure data factory to access bronze container",
				"type": "ManagedIdentity",
				"typeProperties": {
					"resourceId": "/subscriptions/55a851c4-b3bf-4b1c-926a-af6cdad646b9/resourceGroups/dev_rg-charming-dinosaur/providers/Microsoft.ManagedIdentity/userAssignedIdentities/data_factory_bronze_container_identity"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/data_factory_key_vault_identity')]",
			"type": "Microsoft.DataFactory/factories/credentials",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Credential for azure data factory to access key vault",
				"type": "ManagedIdentity",
				"typeProperties": {
					"resourceId": "/subscriptions/55a851c4-b3bf-4b1c-926a-af6cdad646b9/resourceGroups/dev_rg-charming-dinosaur/providers/Microsoft.ManagedIdentity/userAssignedIdentities/data_factory_key_vault_identity"
				}
			},
			"dependsOn": []
		}
	]
}